{"ast":null,"code":"import _classCallCheck from \"/Users/Charles/Documents/Flatiron-School/mod-4/finalProject/parsed/parsed-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Charles/Documents/Flatiron-School/mod-4/finalProject/parsed/parsed-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Charles/Documents/Flatiron-School/mod-4/finalProject/parsed/parsed-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Charles/Documents/Flatiron-School/mod-4/finalProject/parsed/parsed-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Charles/Documents/Flatiron-School/mod-4/finalProject/parsed/parsed-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Charles/Documents/Flatiron-School/mod-4/finalProject/parsed/parsed-frontend/src/components/DisplayInfo.js\";\nimport React, { Component } from 'react';\nvar str = '';\nvar headers = [];\n\nvar DisplayInfo =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DisplayInfo, _Component);\n\n  function DisplayInfo() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DisplayInfo);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DisplayInfo)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.displayNestInfo = function (object, currentKey) {\n      var oldKey = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n      if (Array.isArray(object[currentKey])) {\n        return object[currentKey].map(function (obj) {\n          var array = [];\n\n          for (var key in obj) {\n            array.push(React.createElement(\"div\", {\n              className: \"nested-display\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 15\n              },\n              __self: this\n            }, _this.displayNestInfo(obj, key, currentKey)));\n          }\n\n          return array;\n        });\n      } else if (typeof object[currentKey] === 'object') {\n        var array = [];\n\n        for (var key in object[currentKey]) {\n          array.push(React.createElement(\"div\", {\n            className: \"nested-display\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 26\n            },\n            __self: this\n          }, _this.displayNestInfo(object[currentKey], key, currentKey)));\n        }\n\n        return array;\n      } else {\n        if (str === oldKey) {\n          return React.createElement(\"p\", {\n            className: \"card-text\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            },\n            __self: this\n          }, React.createElement(\"b\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            },\n            __self: this\n          }, currentKey.split('_').join(' '), \":\"), \" \", object[currentKey]);\n        } else {\n          str = oldKey;\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            },\n            __self: this\n          }, React.createElement(\"b\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            className: \"card-text un-nest\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            },\n            __self: this\n          }, oldKey ? \"\".concat(oldKey.split('_').join(' '), \":\") : null)), React.createElement(\"p\", {\n            className: \"card-text\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            },\n            __self: this\n          }, React.createElement(\"b\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            },\n            __self: this\n          }, currentKey.split('_').join(' '), \":\"), \" \", object[currentKey]));\n        }\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(DisplayInfo, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"display-more-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, this.displayNestInfo(this.props.currentCard, this.props.currentKey));\n    }\n  }]);\n\n  return DisplayInfo;\n}(Component);\n\nexport default DisplayInfo;","map":{"version":3,"sources":["/Users/Charles/Documents/Flatiron-School/mod-4/finalProject/parsed/parsed-frontend/src/components/DisplayInfo.js"],"names":["React","Component","str","headers","DisplayInfo","displayNestInfo","object","currentKey","oldKey","Array","isArray","map","obj","array","key","push","split","join","props","currentCard"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,IAAIC,GAAG,GAAG,EAAV;AACA,IAAIC,OAAO,GAAG,EAAd;;IAEMC,W;;;;;;;;;;;;;;;;;;UAEJC,e,GAAkB,UAACC,MAAD,EAASC,UAAT,EAAqC;AAAA,UAAhBC,MAAgB,uEAAT,IAAS;;AAErD,UAAIC,KAAK,CAACC,OAAN,CAAcJ,MAAM,CAACC,UAAD,CAApB,CAAJ,EAAuC;AAErC,eAAOD,MAAM,CAACC,UAAD,CAAN,CAAmBI,GAAnB,CAAwB,UAAAC,GAAG,EAAI;AACpC,cAAMC,KAAK,GAAG,EAAd;;AACA,eAAK,IAAIC,GAAT,IAAgBF,GAAhB,EAAqB;AACnBC,YAAAA,KAAK,CAACE,IAAN,CAAW;AAAK,cAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACR,MAAKV,eAAL,CAAqBO,GAArB,EAA0BE,GAA1B,EAA+BP,UAA/B,CADQ,CAAX;AAGD;;AAED,iBAAOM,KAAP;AACD,SATM,CAAP;AAUD,OAZD,MAaK,IAAI,OAAOP,MAAM,CAACC,UAAD,CAAb,KAA8B,QAAlC,EAA2C;AAC9C,YAAMM,KAAK,GAAG,EAAd;;AACA,aAAK,IAAIC,GAAT,IAAgBR,MAAM,CAACC,UAAD,CAAtB,EAAoC;AAClCM,UAAAA,KAAK,CAACE,IAAN,CAAW;AAAK,YAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACR,MAAKV,eAAL,CAAqBC,MAAM,CAACC,UAAD,CAA3B,EAAyCO,GAAzC,EAA8CP,UAA9C,CADQ,CAAX;AAGD;;AAED,eAAOM,KAAP;AACD,OATI,MAUA;AACH,YAAIX,GAAG,KAAKM,MAAZ,EAAoB;AAClB,iBAAO;AAAG,YAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAID,UAAU,CAACS,KAAX,CAAiB,GAAjB,EAAsBC,IAAtB,CAA2B,GAA3B,CAAJ,MAAzB,OAAoEX,MAAM,CAACC,UAAD,CAA1E,CAAP;AACD,SAFD,MAEO;AACLL,UAAAA,GAAG,GAAGM,MAAN;AAEA,iBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAG;AAAG,YAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAkCA,MAAM,aAAMA,MAAM,CAACQ,KAAP,CAAa,GAAb,EAAkBC,IAAlB,CAAuB,GAAvB,CAAN,SAAuC,IAA/E,CAAH,CAAL,EAAoG;AAAG,YAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAIV,UAAU,CAACS,KAAX,CAAiB,GAAjB,EAAsBC,IAAtB,CAA2B,GAA3B,CAAJ,MAAzB,OAAoEX,MAAM,CAACC,UAAD,CAA1E,CAApG,CAAP;AACD;AACF;AACF,K;;;;;;;6BAEQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKF,eAAL,CAAqB,KAAKa,KAAL,CAAWC,WAAhC,EAA6C,KAAKD,KAAL,CAAWX,UAAxD,CADH,CADF;AAKD;;;;EA5CuBN,S;;AA+C1B,eAAeG,WAAf","sourcesContent":["import React, { Component } from 'react';\n\nlet str = ''\nlet headers = []\n\nclass DisplayInfo extends Component {\n\n  displayNestInfo = (object, currentKey, oldKey=null) => {\n\n    if (Array.isArray(object[currentKey])) {\n\n      return object[currentKey].map( obj => {\n        const array = []\n        for (let key in obj) {\n          array.push(<div className='nested-display'>\n            {this.displayNestInfo(obj, key, currentKey)}\n          </div>)\n        }\n\n        return array\n      })\n    }\n    else if (typeof object[currentKey] === 'object'){\n      const array = []\n      for (let key in object[currentKey]) {\n        array.push(<div className='nested-display'>\n          {this.displayNestInfo(object[currentKey], key, currentKey)}\n        </div>)\n      }\n\n      return array\n    }\n    else {\n      if (str === oldKey) {\n        return <p className='card-text'><b>{currentKey.split('_').join(' ')}:</b> {object[currentKey]}</p>\n      } else {\n        str = oldKey\n\n        return <div><b><p className='card-text un-nest'>{oldKey ? `${oldKey.split('_').join(' ')}:` : null}</p></b><p className='card-text'><b>{currentKey.split('_').join(' ')}:</b> {object[currentKey]}</p></div>\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className='display-more-info'>\n        {this.displayNestInfo(this.props.currentCard, this.props.currentKey)}\n      </div>\n    )\n  }\n}\n\nexport default DisplayInfo\n"]},"metadata":{},"sourceType":"module"}