{"ast":null,"code":"import _classCallCheck from \"/Users/Charles/Documents/Flatiron-School/mod-4/finalProject/parsed/parsed-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Charles/Documents/Flatiron-School/mod-4/finalProject/parsed/parsed-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Charles/Documents/Flatiron-School/mod-4/finalProject/parsed/parsed-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Charles/Documents/Flatiron-School/mod-4/finalProject/parsed/parsed-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Charles/Documents/Flatiron-School/mod-4/finalProject/parsed/parsed-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Charles/Documents/Flatiron-School/mod-4/finalProject/parsed/parsed-frontend/src/components/DisplayCards.js\";\nimport React, { Component } from 'react';\nimport DisplayCard from './DisplayCard';\nimport uuid from 'uuid';\n\nvar DisplayCards =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DisplayCards, _Component);\n\n  function DisplayCards() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DisplayCards);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DisplayCards)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.makeDisplayCards = function () {\n      var cards = _this.props.displayData;\n      return cards.map(function (card) {\n        return React.createElement(\"div\", {\n          className: \"display-card\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12\n          },\n          __self: this\n        }, React.createElement(DisplayCard, {\n          key: uuid(),\n          card: card,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13\n          },\n          __self: this\n        }));\n      });\n    };\n\n    _this.manipulateParsedDataForCsv = function () {\n      var data = _this.props.parsedData;\n      var headers = Object.keys(data[0]);\n      var fixedHeader = headers.map(function (header) {\n        return header.split('_').join(' ');\n      });\n      var allRows = [];\n      var rows = data.map(function (data) {\n        var newArray = [];\n        var grabRows = headers.forEach(function (header) {\n          return newArray.push(data[header]);\n        });\n        allRows.push(newArray);\n      });\n      var finalFile = [];\n      finalFile.push(headers);\n      var holderArray = [allRows.join('\\n')];\n      finalFile.push(holderArray);\n      var finalCsv = finalFile.join('\\n');\n      return finalCsv;\n    };\n\n    _this.downloadCsv = function (data) {\n      var blob = new Blob([data], {\n        type: 'text/csv'\n      });\n      var url = window.URL.createObjectURL(blob);\n      var a = document.createElement('a');\n      a.setAttribute('hidden', '');\n      a.setAttribute('href', url);\n      a.setAttribute('download', 'json-api.csv');\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    };\n\n    return _this;\n  }\n\n  _createClass(DisplayCards, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      this.manipulateParsedDataForCsv();\n      return React.createElement(\"div\", {\n        className: \"cards-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"display-cards\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, this.makeDisplayCards()), React.createElement(\"div\", {\n        className: \"download-csv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"download-btn\",\n        onClick: function onClick() {\n          return _this2.downloadCsv(_this2.manipulateParsedDataForCsv());\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Download as CSV\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, '<--'))));\n    }\n  }]);\n\n  return DisplayCards;\n}(Component);\n\nexport default DisplayCards;","map":{"version":3,"sources":["/Users/Charles/Documents/Flatiron-School/mod-4/finalProject/parsed/parsed-frontend/src/components/DisplayCards.js"],"names":["React","Component","DisplayCard","uuid","DisplayCards","makeDisplayCards","cards","props","displayData","map","card","manipulateParsedDataForCsv","data","parsedData","headers","Object","keys","fixedHeader","header","split","join","allRows","rows","newArray","grabRows","forEach","push","finalFile","holderArray","finalCsv","downloadCsv","blob","Blob","type","url","window","URL","createObjectURL","a","document","createElement","setAttribute","body","appendChild","click","removeChild"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,MAAjB;;IAEMC,Y;;;;;;;;;;;;;;;;;;UAEJC,gB,GAAmB,YAAM;AACvB,UAAIC,KAAK,GAAG,MAAKC,KAAL,CAAWC,WAAvB;AAEA,aAAOF,KAAK,CAACG,GAAN,CAAW,UAAAC,IAAI,EAAI;AACxB,eACE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,WAAD;AAAa,UAAA,GAAG,EAAEP,IAAI,EAAtB;AAA0B,UAAA,IAAI,EAAEO,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AAKD,OANM,CAAP;AAOD,K;;UAEDC,0B,GAA6B,YAAM;AACjC,UAAIC,IAAI,GAAG,MAAKL,KAAL,CAAWM,UAAtB;AACA,UAAIC,OAAO,GAAGC,MAAM,CAACC,IAAP,CAAYJ,IAAI,CAAC,CAAD,CAAhB,CAAd;AACA,UAAIK,WAAW,GAAGH,OAAO,CAACL,GAAR,CAAY,UAAAS,MAAM;AAAA,eAAIA,MAAM,CAACC,KAAP,CAAa,GAAb,EAAkBC,IAAlB,CAAuB,GAAvB,CAAJ;AAAA,OAAlB,CAAlB;AAEA,UAAIC,OAAO,GAAG,EAAd;AAEA,UAAIC,IAAI,GAAGV,IAAI,CAACH,GAAL,CAAU,UAAAG,IAAI,EAAI;AAC3B,YAAIW,QAAQ,GAAE,EAAd;AACA,YAAIC,QAAQ,GAAGV,OAAO,CAACW,OAAR,CAAgB,UAAAP,MAAM;AAAA,iBAAIK,QAAQ,CAACG,IAAT,CAAcd,IAAI,CAACM,MAAD,CAAlB,CAAJ;AAAA,SAAtB,CAAf;AAEAG,QAAAA,OAAO,CAACK,IAAR,CAAaH,QAAb;AACD,OALU,CAAX;AAOA,UAAII,SAAS,GAAG,EAAhB;AACAA,MAAAA,SAAS,CAACD,IAAV,CAAeZ,OAAf;AACA,UAAIc,WAAW,GAAG,CAACP,OAAO,CAACD,IAAR,CAAa,IAAb,CAAD,CAAlB;AACAO,MAAAA,SAAS,CAACD,IAAV,CAAeE,WAAf;AAEA,UAAIC,QAAQ,GAAGF,SAAS,CAACP,IAAV,CAAe,IAAf,CAAf;AACA,aAAOS,QAAP;AACD,K;;UAEDC,W,GAAc,UAAClB,IAAD,EAAU;AACtB,UAAMmB,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAACpB,IAAD,CAAT,EAAiB;AAAEqB,QAAAA,IAAI,EAAE;AAAR,OAAjB,CAAb;AACA,UAAMC,GAAG,GAAGC,MAAM,CAACC,GAAP,CAAWC,eAAX,CAA2BN,IAA3B,CAAZ;AACA,UAAMO,CAAC,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAV;AACAF,MAAAA,CAAC,CAACG,YAAF,CAAe,QAAf,EAAyB,EAAzB;AACAH,MAAAA,CAAC,CAACG,YAAF,CAAe,MAAf,EAAuBP,GAAvB;AACAI,MAAAA,CAAC,CAACG,YAAF,CAAe,UAAf,EAA2B,cAA3B;AACAF,MAAAA,QAAQ,CAACG,IAAT,CAAcC,WAAd,CAA0BL,CAA1B;AACAA,MAAAA,CAAC,CAACM,KAAF;AACAL,MAAAA,QAAQ,CAACG,IAAT,CAAcG,WAAd,CAA0BP,CAA1B;AACD,K;;;;;;;6BAEQ;AAAA;;AACP,WAAK3B,0BAAL;AAEA,aAEE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKN,gBAAL,EADH,CADF,EAIE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,cAAlB;AAAiC,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACyB,WAAL,CAAiB,MAAI,CAACnB,0BAAL,EAAjB,CAAN;AAAA,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAoH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAApH,EAA6H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,KAAP,CAA7H,CADF,CAJF,CAFF;AAWD;;;;EA/DwBV,S;;AAkE3B,eAAeG,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport DisplayCard from './DisplayCard';\nimport uuid from 'uuid'\n\nclass DisplayCards extends Component {\n\n  makeDisplayCards = () => {\n    let cards = this.props.displayData\n\n    return cards.map( card => {\n      return (\n        <div className='display-card'>\n          <DisplayCard key={uuid()} card={card} />\n        </div>\n      )\n    })\n  }\n\n  manipulateParsedDataForCsv = () => {\n    let data = this.props.parsedData\n    let headers = Object.keys(data[0])\n    let fixedHeader = headers.map(header => header.split('_').join(' '))\n\n    let allRows = []\n\n    let rows = data.map( data => {\n      let newArray =[]\n      let grabRows = headers.forEach(header => newArray.push(data[header]))\n\n      allRows.push(newArray)\n    })\n\n    let finalFile = []\n    finalFile.push(headers)\n    let holderArray = [allRows.join('\\n')]\n    finalFile.push(holderArray)\n\n    let finalCsv = finalFile.join('\\n')\n    return finalCsv\n  }\n\n  downloadCsv = (data) => {\n    const blob = new Blob([data], { type: 'text/csv'})\n    const url = window.URL.createObjectURL(blob)\n    const a = document.createElement('a')\n    a.setAttribute('hidden', '')\n    a.setAttribute('href', url)\n    a.setAttribute('download', 'json-api.csv')\n    document.body.appendChild(a)\n    a.click()\n    document.body.removeChild(a)\n  }\n\n  render() {\n    this.manipulateParsedDataForCsv()\n\n    return (\n\n      <div className='cards-container'>\n        <div className=\"display-cards\">\n          {this.makeDisplayCards()}\n        </div>\n        <div className='download-csv'>\n          <button className='download-btn' onClick={() => this.downloadCsv(this.manipulateParsedDataForCsv())}>Download as CSV<br></br><span>{'<--'}</span></button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default DisplayCards\n"]},"metadata":{},"sourceType":"module"}